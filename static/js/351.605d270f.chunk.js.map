{"version":3,"file":"static/js/351.605d270f.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.unsetTransforms();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureInitialState();\n        });\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.renderEndStyles();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureEndState();\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    unsetTransforms() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, removeNonTranslationalTransform, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    unsetTransforms() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        this.removedTransforms = removeNonTranslationalTransform(element);\n        const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        element.getValue(name, finalKeyframe).jump(finalKeyframe, false);\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n    }\n    renderEndStyles() {\n        this.element.render();\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        if (name === \"height\" && this.suspendedScrollY !== undefined) {\n            window.scrollTo(0, this.suspendedScrollY);\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved)\n            flushKeyframeResolvers();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        const { name, type, velocity, delay, onComplete, onUpdate } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...this.initPlayback(keyframes, finalKeyframe),\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = () => {\n                resolve();\n                this.updateFinishedPromise();\n            };\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.state = \"idle\";\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.teardown();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let duration = this.options.duration || 300;\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            duration = pregeneratedAnimation.duration;\n            this.options.times = pregeneratedAnimation.times;\n            this.options.ease = pregeneratedAnimation.ease;\n        }\n        const { motionValue, name } = this.options;\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.isStopped = true;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n            });\n            motionValue.setWithVelocity(sampleAnimation.sample(this.time - sampleDelta).value, sampleAnimation.sample(this.time).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.14\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.14\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.14 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolver","needsMeasurement","unsetTransforms","measureInitialState","renderEndStyles","measureEndState","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","map","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","removedTransforms","getValue","removeNonTranslationalTransform","jump","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","finalKeyframeIndex","scrollTo","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","from","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","onStop","teardown","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","setWithVelocity","supports","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}